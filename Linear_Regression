{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":4832081,"sourceType":"datasetVersion","datasetId":2799910}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/rishikesh27/linear-regression?scriptVersionId=202079852\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:38:36.904044Z","iopub.execute_input":"2024-10-19T17:38:36.904454Z","iopub.status.idle":"2024-10-19T17:38:36.911591Z","shell.execute_reply.started":"2024-10-19T17:38:36.904402Z","shell.execute_reply":"2024-10-19T17:38:36.910561Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/salary-dataset-simple-linear-regression/Salary_dataset.csv\n","output_type":"stream"}],"execution_count":19},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport torch\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:38:41.953597Z","iopub.execute_input":"2024-10-19T17:38:41.954006Z","iopub.status.idle":"2024-10-19T17:38:42.475403Z","shell.execute_reply.started":"2024-10-19T17:38:41.953971Z","shell.execute_reply":"2024-10-19T17:38:42.474208Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/salary-dataset-simple-linear-regression/Salary_dataset.csv\")\ndisplay(df.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:38:54.72587Z","iopub.execute_input":"2024-10-19T17:38:54.726287Z","iopub.status.idle":"2024-10-19T17:38:54.744096Z","shell.execute_reply.started":"2024-10-19T17:38:54.726249Z","shell.execute_reply":"2024-10-19T17:38:54.742808Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"   Unnamed: 0  YearsExperience   Salary\n0           0              1.2  39344.0\n1           1              1.4  46206.0\n2           2              1.6  37732.0\n3           3              2.1  43526.0\n4           4              2.3  39892.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>YearsExperience</th>\n      <th>Salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1.2</td>\n      <td>39344.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1.4</td>\n      <td>46206.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>1.6</td>\n      <td>37732.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>2.1</td>\n      <td>43526.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>2.3</td>\n      <td>39892.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":22},{"cell_type":"code","source":"df = df.drop('Unnamed: 0', axis=1)\ndisplay(df.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:38:57.250015Z","iopub.execute_input":"2024-10-19T17:38:57.250979Z","iopub.status.idle":"2024-10-19T17:38:57.26203Z","shell.execute_reply.started":"2024-10-19T17:38:57.250926Z","shell.execute_reply":"2024-10-19T17:38:57.260837Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"   YearsExperience   Salary\n0              1.2  39344.0\n1              1.4  46206.0\n2              1.6  37732.0\n3              2.1  43526.0\n4              2.3  39892.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>YearsExperience</th>\n      <th>Salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.2</td>\n      <td>39344.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.4</td>\n      <td>46206.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.6</td>\n      <td>37732.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2.1</td>\n      <td>43526.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2.3</td>\n      <td>39892.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"import torch\nfrom torch.utils.data import random_split, DataLoader, Dataset\nimport pandas as pd\n\n# Assuming you have a DataFrame 'df'\n# Example of a DataFrame:\n# df = pd.DataFrame({'YearsExperience': [1, 2, 3], 'Salary': [30000, 50000, 60000]})\n\nclass ExampleDataset(Dataset):\n    def __init__(self, dataframe):\n        self.data = dataframe.values  # Convert DataFrame to numpy array or tensor\n    \n    def __len__(self):\n        return len(self.data)\n    \n    def __getitem__(self, idx):\n        sample = self.data[idx]\n        return sample\n\n# Create a dataset from the DataFrame\ndataset = ExampleDataset(df)\n\n# Define the sizes for train, validation, and test sets\ntrain_size = int(0.7 * len(dataset))  # 70% training\nval_size = int(0.15 * len(dataset))    # 15% validation\ntest_size = len(dataset) - train_size - val_size  # Remaining for test\n\n# Split the dataset\ntrain_dataset, val_dataset, test_dataset = random_split(dataset, [train_size, val_size, test_size])\n\n# Optionally create DataLoaders for batch processing\ntrain_loader = DataLoader(train_dataset, batch_size=32, shuffle=True)\nval_loader = DataLoader(val_dataset, batch_size=32)\ntest_loader = DataLoader(test_dataset, batch_size=32)\n\n# Print the sizes of the datasets\nprint(f\"Training set size: {len(train_dataset)}\")\nprint(f\"Validation set size: {len(val_dataset)}\")\nprint(f\"Test set size: {len(test_dataset)}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:39:00.257594Z","iopub.execute_input":"2024-10-19T17:39:00.258549Z","iopub.status.idle":"2024-10-19T17:39:00.269238Z","shell.execute_reply.started":"2024-10-19T17:39:00.258507Z","shell.execute_reply":"2024-10-19T17:39:00.268058Z"}},"outputs":[{"name":"stdout","text":"Training set size: 21\nValidation set size: 4\nTest set size: 5\n","output_type":"stream"}],"execution_count":24},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\n# Assuming train_dataset has 'YearsExperience' and 'Salary' in the data\n# Extract the training data\ntrain_data = [train_dataset[i] for i in range(len(train_dataset))]\n\n# Convert to a list of tuples or a NumPy array\n# Assuming the data structure has the form [YearsExperience, Salary]\nyears_experience = [data[0] for data in train_data]\nsalary = [data[1] for data in train_data]\n\n# Plotting the scatter plot\nplt.figure(figsize=(8, 6))\nplt.scatter(years_experience, salary, color='blue', label='Training Data')\n\n# Add labels and title\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.title('Training Data: Years of Experience vs Salary')\nplt.legend()\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:39:40.935925Z","iopub.execute_input":"2024-10-19T17:39:40.936831Z","iopub.status.idle":"2024-10-19T17:39:41.208256Z","shell.execute_reply.started":"2024-10-19T17:39:40.936785Z","shell.execute_reply":"2024-10-19T17:39:41.207146Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"\ntrain_data = [train_dataset[i] for i in range(len(train_dataset))]\nval_data = [val_dataset[i] for i in range(len(val_dataset))]\n\n# Convert the training and validation data to tensors\ntrain_years_experience = torch.tensor([data[0] for data in train_data], dtype=torch.float32).view(-1, 1)\ntrain_salary = torch.tensor([data[1] for data in train_data], dtype=torch.float32).view(-1, 1)\n\nval_years_experience = torch.tensor([data[0] for data in val_data], dtype=torch.float32).view(-1, 1)\nval_salary = torch.tensor([data[1] for data in val_data], dtype=torch.float32).view(-1, 1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:39:45.687032Z","iopub.execute_input":"2024-10-19T17:39:45.687468Z","iopub.status.idle":"2024-10-19T17:39:45.696148Z","shell.execute_reply.started":"2024-10-19T17:39:45.687427Z","shell.execute_reply":"2024-10-19T17:39:45.694996Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"import torch.nn as nn\nimport torch.optim as optim","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:39:48.146855Z","iopub.execute_input":"2024-10-19T17:39:48.147851Z","iopub.status.idle":"2024-10-19T17:39:48.152403Z","shell.execute_reply.started":"2024-10-19T17:39:48.147804Z","shell.execute_reply":"2024-10-19T17:39:48.151212Z"}},"outputs":[],"execution_count":28},{"cell_type":"code","source":"# Assuming train_dataset is a list of tuples (YearsExperience, Salary)\ntrain_data = [train_dataset[i] for i in range(len(train_dataset))]\n\n# Convert the training data to tensors\nyears_experience = torch.tensor([data[0] for data in train_data], dtype=torch.float32).view(-1, 1)\nsalary = torch.tensor([data[1] for data in train_data], dtype=torch.float32).view(-1, 1)\n\n# Define a simple linear regression model (Single-layer perceptron)\nclass LinearRegressionModel(nn.Module):\n    def __init__(self):\n        super(LinearRegressionModel, self).__init__()\n        self.linear = nn.Linear(1, 1)  # Single input (YearsExperience) and single output (Salary)\n    \n    def forward(self, x):\n        return self.linear(x)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:39:52.363031Z","iopub.execute_input":"2024-10-19T17:39:52.363427Z","iopub.status.idle":"2024-10-19T17:39:52.371626Z","shell.execute_reply.started":"2024-10-19T17:39:52.363381Z","shell.execute_reply":"2024-10-19T17:39:52.370507Z"}},"outputs":[],"execution_count":29},{"cell_type":"code","source":"# Instantiate the model\nmodel = LinearRegressionModel()\n\n# Define the loss function (Mean Squared Error) and optimizer (Stochastic Gradient Descent)\ncriterion = nn.MSELoss()\noptimizer = optim.SGD(model.parameters(), lr=0.01)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:39:55.196296Z","iopub.execute_input":"2024-10-19T17:39:55.196735Z","iopub.status.idle":"2024-10-19T17:39:55.202996Z","shell.execute_reply.started":"2024-10-19T17:39:55.196696Z","shell.execute_reply":"2024-10-19T17:39:55.201698Z"}},"outputs":[],"execution_count":30},{"cell_type":"code","source":"# Parameters for early stopping\nbest_val_loss = float('inf')\npatience = 10\ntrigger_times = 0\nepochs = 1000\n\n# Training loop with early stopping\nfor epoch in range(epochs):\n    model.train()  # Set the model to training mode\n    optimizer.zero_grad()  # Zero gradients\n\n    # Forward pass for training data\n    train_predictions = model(train_years_experience)\n    train_loss = criterion(train_predictions, train_salary)\n    \n    # Backpropagation and optimization\n    train_loss.backward()\n    optimizer.step()\n\n    # Evaluate on validation data\n    model.eval()  # Set the model to evaluation mode\n    with torch.no_grad():  # No need to calculate gradients for validation\n        val_predictions = model(val_years_experience)\n        val_loss = criterion(val_predictions, val_salary)\n\n    # Print the losses for monitoring\n    if (epoch + 1) % 100 == 0:\n        print(f'Epoch [{epoch+1}/{epochs}], Train Loss: {train_loss.item():.4f}, Val Loss: {val_loss.item():.4f}')\n\n    # Early stopping logic\n    if val_loss < best_val_loss:\n        best_val_loss = val_loss\n        trigger_times = 0  # Reset patience counter\n    else:\n        trigger_times += 1\n        if trigger_times >= patience:\n            print(f\"Early stopping triggered at epoch {epoch+1}\")\n            break","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:39:58.748573Z","iopub.execute_input":"2024-10-19T17:39:58.749573Z","iopub.status.idle":"2024-10-19T17:39:58.890355Z","shell.execute_reply.started":"2024-10-19T17:39:58.749528Z","shell.execute_reply":"2024-10-19T17:39:58.889277Z"}},"outputs":[{"name":"stdout","text":"Epoch [100/1000], Train Loss: 90812528.0000, Val Loss: 27748348.0000\nEpoch [200/1000], Train Loss: 55816100.0000, Val Loss: 16211675.0000\nEarly stopping triggered at epoch 256\n","output_type":"stream"}],"execution_count":31},{"cell_type":"markdown","source":"### Model is trained for 256 epochs\nValidaiton dataset reduces the overfitting process ","metadata":{}},{"cell_type":"code","source":"# Plot the results after training\npredicted_train_salary = model(train_years_experience).detach().numpy()\npredicted_val_salary = model(val_years_experience).detach().numpy()\n\nplt.figure(figsize=(8, 6))\nplt.scatter(train_years_experience.numpy(), train_salary.numpy(), color='blue', label='Train Data')\nplt.plot(train_years_experience.numpy(), predicted_train_salary, color='red', label='Train Fit')\nplt.scatter(val_years_experience.numpy(), val_salary.numpy(), color='green', label='Validation Data')\nplt.plot(val_years_experience.numpy(), predicted_val_salary, color='orange', label='Validation Fit')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.title('Linear Regression: Train vs Validation')\nplt.legend()\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:40:20.200097Z","iopub.execute_input":"2024-10-19T17:40:20.200587Z","iopub.status.idle":"2024-10-19T17:40:20.522553Z","shell.execute_reply.started":"2024-10-19T17:40:20.200545Z","shell.execute_reply":"2024-10-19T17:40:20.5212Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":33},{"cell_type":"code","source":"# Assuming test_dataset is already split and contains tuples (YearsExperience, Salary)\ntest_data = [test_dataset[i] for i in range(len(test_dataset))]\n\n# Convert the test data into tensors\ntest_years_experience = torch.tensor([data[0] for data in test_data], dtype=torch.float32).view(-1, 1)\ntest_salary = torch.tensor([data[1] for data in test_data], dtype=torch.float32).view(-1, 1)\n\n# Evaluate the model on the test data (no need to calculate gradients)\nmodel.eval()\nwith torch.no_grad():\n    predicted_test_salary = model(test_years_experience).detach().numpy()\n\n# Convert the actual test data to numpy for plotting\ntrue_test_salary = test_salary.numpy()\n\n# Plot the true vs predicted values on test data\nplt.figure(figsize=(8, 6))\nplt.scatter(test_years_experience.numpy(), true_test_salary, color='blue', label='True Test Data')\nplt.scatter(test_years_experience.numpy(), predicted_test_salary, color='red', label='Predicted Test Data')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.title('True vs Predicted Salary on Test Data')\nplt.legend()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:40:26.499903Z","iopub.execute_input":"2024-10-19T17:40:26.500313Z","iopub.status.idle":"2024-10-19T17:40:26.817438Z","shell.execute_reply.started":"2024-10-19T17:40:26.500275Z","shell.execute_reply":"2024-10-19T17:40:26.816411Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":34},{"cell_type":"code","source":"from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\npredicted_test_salary = predicted_test_salary.flatten()\n\n# Calculate Mean Squared Error (MSE)\nmse = mean_squared_error(true_test_salary, predicted_test_salary)\nprint(f'Mean Squared Error (MSE): {mse:.4f}')\n\n# Calculate Root Mean Squared Error (RMSE)\nrmse = np.sqrt(mse)\nprint(f'Root Mean Squared Error (RMSE): {rmse:.4f}')\n\n# Calculate Mean Absolute Error (MAE)\nmae = mean_absolute_error(true_test_salary, predicted_test_salary)\nprint(f'Mean Absolute Error (MAE): {mae:.4f}')\n\n# Calculate R-squared (R²)\nr_squared = r2_score(true_test_salary, predicted_test_salary)\nprint(f'R-squared (R²): {r_squared:.4f}')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T17:40:59.060372Z","iopub.execute_input":"2024-10-19T17:40:59.061298Z","iopub.status.idle":"2024-10-19T17:40:59.069894Z","shell.execute_reply.started":"2024-10-19T17:40:59.061253Z","shell.execute_reply":"2024-10-19T17:40:59.068611Z"}},"outputs":[{"name":"stdout","text":"Mean Squared Error (MSE): 25000796.0000\nRoot Mean Squared Error (RMSE): 5000.0796\nMean Absolute Error (MAE): 3467.3218\nR-squared (R²): 0.9445\n","output_type":"stream"}],"execution_count":36}]}